
ASSIGNMENT1

Query / Find Documents
query the movies collection to
First we need to create a database name assignment by using command-use assignment.
Then we need to create collection name movies by using command- db.movies.insert({" ":" "})

1.get all documents
db.movies.find({}).pretty()

2.get all documents with writer set to "Quentin Tarantino"
db.movies.find({"writer":"Quentin Tarantino"}).pretty()

3.get all documents where actors include "Brad Pitt"
db.movies.find({"actors":"Brad Pitt"}).pretty()


4.get all documents with franchise set to "The Hobbit"
db.movies.find({"franchies":"Hobbit"}).pretty()

5.get all movies released in the 90s
db.movies.find({year: {$gte: 1990, $lte: 1999}}).pretty()

6.get all movies released before the year 2000 or after 2010

db.movies.find({$or:[{year:{$lte:2000}}, {year:{$gte:2010}}]).pretty()


1.add a synopsis to "The Hobbit: An Unexpected Journey" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."
db.movies.update({title: "The Hobbit: An Unexpected Journey"}, {$set: {synopsis: "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."}})



2.add a synopsis to "The Hobbit: The Desolation of Smaug" : "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."
db.movies.update({title: "The Hobbit: The Desolation of Smaug"}, {$set: {synopsis: "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."}})


3.add an actor named "Samuel L. Jackson" to the movie "Pulp Fiction"
db.movies.update({title: "Pulp Fiction"}, {$push: {actors: "Samuel L. Jackson"}})

Text Search
find all movies that have a synopsis that contains the word "Bilbo"
db.movies.find({synopsis: /.Bilbo./}).pretty()

find all movies that have a synopsis that contains the word "Gandalf"
db.movies.find({synopsis: /.Gandalf./}).pretty()

find all movies that have a synopsis that contains the word "Bilbo" and not the word "Gandalf"
db.movies.find({$and: [{synopsis: /Bilbo/}, {synopsis: {$not: /Gandalf/}}]}).pretty()

find all movies that have a synopsis that contains the word "dwarves" or "hobbit"
db.movies.find({$or: [{synopsis: /dwarves/}, {synopsis: /hobbit/}]}).pretty()

find all movies that have a synopsis that contains the word "gold" and "dragon"
db.movies.find({$or: [{synopsis: /gold/}, {synopsis:/dragon/}]).pretty()

Delete Documents
delete the movie "Pee Wee Herman's Big Adventure"
delete the movie "Avatar"

D1: db.movies.remove({title: "Pee Wee Herman's Big Adventure"})
D2: db.movies.remove({title: "Avatar"})

questio-2

find all users
find all posts
find all posts that was authored by "GoodGuyGreg"
find all posts that was authored by "ScumbagSteve"
find all comments
find all comments that was authored by "GoodGuyGreg"
find all comments that was authored by "ScumbagSteve"
find all comments belonging to the post "Reports a bug in your code"

db.users.find({}).pretty()
R2: db.posts.find({}).pretty()
R3: db.posts.find({username: "GoodGuyGreg"}).pretty()
R4: db.posts.find({username: "ScumbagSteve"}).pretty()
R5: db.comments.find({}).pretty()
R6: db.comments.find({username: "GoodGuyGreg"}).pretty()
R7: db.comments.find({username: "ScumbagSteve"}).pretty()
R8: db.comments.find({post: db.posts.findOne({title: "Reports a bug in your code"})._id})



